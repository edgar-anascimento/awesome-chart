# Default values for awesome-chart.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
fullnameOverride: my-app

replicaCount: 1

image:
  repository: my-image
  tag: stable
  pullPolicy: IfNotPresent

## Container's hostname defaults to its pod name when deployed to kubernetes.
## We recommend not setting this value unless it's really necessary.
# containerHostname: my-container-name

service:
  type: ClusterIP
  port: 80
  annotations:
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"


hpa:
  enabled: false
  ## Enables HorizontalPodAutoscaler. To activate it use hpa.enabled: true
  ## You can define the autoscaling behavior with the options below.
  scaleTargetRef:
    kind: Deployment
  maxReplicas: 2
  minReplicas: 1
  metrics:
    - type: Resource
      resource:
        name: cpu
        targetUtilization: 50

ingress:
  enabled: false
  ## Enables creating an Ingress resource to expose application outside the k8s cluster.
  ## To activate it use ingress.enabled: true
  ## You can define how the application will be exposed with the options below.
  annotations:
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  paths: []
  hosts:
    - chart-example.local
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

persistence:
  enabled: false
  ## A manually managed Persistent Volume and Claim
  ## Requires Persistence.Enabled: true
  ## If defined, PVC must be created manually before volume will be bound
  # existingClaim:

  ## data Persistent Volume Storage Class
  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  ##
  # storageClass: "-"
  annotations: {}
  accessMode: ReadWriteOnce
  size: 25Gi

readinessProbe: {}

resources: {}
  ## We usually recommend not to specify default resources and to leave this as a conscious
  ## choice for the user. This also increases chances charts run on environments with little
  ## resources, such as Minikube. If you do want to specify resources, uncomment the following
  ## lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #  cpu: 100m
  #  memory: 128Mi
  # requests:
  #  cpu: 100m
  #  memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

## This section is used to create environment variables to fulfill application needs.
## Any environment variable in this key value map will be created into container's operating system using the "name" property.
## You need to specify what is the type of environment variable. If it's a "plain" type the value will be injected to the deployment manifest as is.
## If there's any environment variable of the type "secret" (meaning that you shouldn't know it's value) a resource secret will be created as part of
## the release into k8s with an empty value to be filled latter.
# env:
#   - name: PLAIN_TEXT_ENV_VAR1
#     type: plain
#     value: text value
#   - name: PLAIN_TEXT_ENV_VAR2
#     type: plain
#     value: text value
#   - name: TOP_SECRET_ENV_VAR_1
#     type: secret
#   - name: TOP_SECRET_ENV_VAR_2
#     type: secret
#   - name: TOP_SECRET_ENV_VAR_3
#     type: secret
